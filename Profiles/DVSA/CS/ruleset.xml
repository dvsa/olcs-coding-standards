<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="DVSA-V2">
  <rule ref="PSR2.Classes.ClassDeclaration.MissingBrace">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.ClassDeclaration.OpenBraceNewLine">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.ClassDeclaration.OpenBraceNotAlone">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.ClassDeclaration.OpenBraceWrongLine">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.ClassDeclaration.SpaceBeforeBrace">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.ClassDeclaration.SpaceBeforeKeyword">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.ClassDeclaration.SpaceAfterKeyword">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.ClassDeclaration.SpaceAfterName">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.ClassDeclaration.ExtendsLine">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.ClassDeclaration.ImplementsLine">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.ClassDeclaration.SpaceBeforeExtends">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.ClassDeclaration.SpaceBeforeImplements">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.ClassDeclaration.InterfaceSameLine">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.ClassDeclaration.InterfaceWrongIndent">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.ClassDeclaration.NoSpaceBeforeName">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.ClassDeclaration.SpaceBeforeName">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.ClassDeclaration.SpaceBeforeComma">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.ClassDeclaration.CloseBraceAfterBody">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.ClassDeclaration.CloseBraceSameLine">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.PropertyDeclaration.Underscore">
    <severity>6</severity>
  </rule>
  <rule ref="PSR2.Classes.PropertyDeclaration.VarUsed">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.PropertyDeclaration.Multiple">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Classes.PropertyDeclaration.ScopeMissing">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.ControlStructures.ElseIfDeclaration.NotAllowed">
    <severity>6</severity>
  </rule>
  <rule ref="PSR2.ControlStructures.SwitchDeclaration.caseNotLower">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.ControlStructures.SwitchDeclaration.defaultNotLower">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.ControlStructures.SwitchDeclaration.caseIndent">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.ControlStructures.SwitchDeclaration.defaultIndent">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.ControlStructures.SwitchDeclaration.SpaceBetweenCase">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.ControlStructures.SwitchDeclaration.SpacingAfterCase">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.ControlStructures.SwitchDeclaration.SpaceBeforeColoncase">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.ControlStructures.SwitchDeclaration.SpaceBeforeColondefault">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.ControlStructures.SwitchDeclaration.caseWrongOpener">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.ControlStructures.SwitchDeclaration.defaultWrongOpener">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.ControlStructures.SwitchDeclaration.BreakIndent">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.ControlStructures.SwitchDeclaration.TerminatingComment">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Files.EndFileNewline.TooMany">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Methods.MethodDeclaration.Underscore">
    <severity>6</severity>
  </rule>
  <rule ref="PSR2.Methods.MethodDeclaration.StaticBeforeVisibility">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Methods.MethodDeclaration.FinalAfterVisibility">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Methods.MethodDeclaration.AbstractAfterVisibility">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Namespaces.NamespaceDeclaration.BlankLineAfter">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Namespaces.UseDeclaration.MultipleDeclarations">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Namespaces.UseDeclaration.UseAfterNamespace">
    <severity>8</severity>
  </rule>
  <rule ref="PSR2.Namespaces.UseDeclaration.SpaceAfterLastUse">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.ControlStructures.InlineControlStructure.NotAllowed">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.ControlStructures.InlineControlStructure.Discouraged">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.Files.LineEndings.InvalidEOLChar">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.Files.LineLength">
    <severity>7</severity>
    <properties>
	<property name="lineLimit" value="120"/>
	<property name="absoluteLineLimit" value="0"/>
    </properties>
  </rule>
  <rule ref="Generic.Formatting.DisallowMultipleStatements.SameLine">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterEquals">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.Functions.FunctionCallArgumentSpacing.NoSpaceBeforeEquals">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.Functions.FunctionCallArgumentSpacing.TooMuchSpaceAfterComma">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.PHP.LowerCaseConstant.Found">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.WhiteSpace.ScopeIndent.Incorrect">
    <severity>8</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.CloseBracketLine">
    <severity>8</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket">
    <severity>8</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.Indent">
    <severity>8</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.SpaceAfterCloseBracket">
    <severity>8</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.SpaceAfterOpenBracket">
    <severity>8</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.SpaceBeforeCloseBracket">
    <severity>8</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.SpaceBeforeOpenBracket">
    <severity>8</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.EmptyLine">
    <severity>8</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.MultipleArguments">
    <severity>8</severity>
  </rule>
  <rule ref="PEAR.Functions.ValidDefaultValue.NotAtEnd">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.AsNotLower">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceAfterArrow">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceAfterAs">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceBeforeArrow">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceBeforeAs">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.SpaceAfterOpen">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.SpaceBeforeClose">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.SpacingAfterArrow">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.SpacingAfterAs">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.SpacingBeforeArrow">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration.SpacingBeforeAs">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.NoOpenBracket">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.NoSpaceAfterFirst">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.NoSpaceAfterSecond">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterFirst">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterOpen">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterSecond">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeClose">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeFirst">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeSecond">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.LowercaseDeclaration.FoundUppercase">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
    <severity>8</severity>
    <properties>
        <property name="equalsSpacing" value="1"/>
    </properties>
  </rule>
  <rule ref="Squiz.Functions.LowercaseFunctionKeywords.FoundUppercase">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.Functions.MultiLineFunctionDeclaration.ContentAfterComma">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.Functions.MultiLineFunctionDeclaration.FirstParamSpacing">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.Functions.MultiLineFunctionDeclaration.OneParamPerLine">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.Scope.MethodScope.Missing">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.StartFile">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.ScopeClosingBrace.ContentBefore">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.ScopeClosingBrace.Indent">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing.Incorrect">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.SemicolonSpacing.Incorrect">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
    <severity>8</severity>
  </rule>
  <rule ref="Zend.Files.ClosingTag.NotAllowed">
    <severity>8</severity>
  </rule>
  <rule ref="PSR1.Classes.ClassDeclaration.MultipleClasses">
    <severity>8</severity>
  </rule>
  <rule ref="PSR1.Classes.ClassDeclaration.MissingNamespace">
    <severity>8</severity>
  </rule>
  <rule ref="PSR1.Files.SideEffects.FoundWithSymbols">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.Files.ByteOrderMark.Found">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.NamingConventions.CamelCapsFunctionName.MethodDoubleUnderscore">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.NamingConventions.CamelCapsFunctionName.ScopeNotCamelCaps">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.NamingConventions.CamelCapsFunctionName.NotCamelCaps">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.NamingConventions.CamelCapsFunctionName.FunctionDoubleUnderscore">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.NamingConventions.UpperCaseConstantName.ClassConstantNotUpperCase">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.NamingConventions.UpperCaseConstantName.ConstantNotUpperCase">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.PHP.DisallowShortOpenTag.EchoFound">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.PHP.DisallowShortOpenTag.Found">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.Classes.ValidClassName.MissingBrace">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.Classes.ValidClassName.NotCamelCaps">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.Commenting.EmptyCatchComment.Missing">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.CSS.EmptyClassDefinition.Found">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.Metrics.NestingLevel.MaxExceeded">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.Metrics.NestingLevel">
    <properties>
      <property name="absoluteNestingLevel" value="10" />
    </properties>
  </rule>
  <rule ref="Generic.Commenting.Todo.TaskFound">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement.Found">
    <severity>8</severity>
  </rule>
  <rule ref="Squiz.PHP.NonExecutableCode.Unreachable">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.WhiteSpace.DisallowTabIndent.TabsUsed">
    <severity>6</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EndFile">
    <severity>7</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EndLine">
    <severity>6</severity>
  </rule>
  <rule ref="Squiz.ControlStructures.ControlSignature">
    <severity>7</severity>
  </rule>
  <!-- Note: The below exclusions are done as the ClassComment sniff runs all
       sub-sniffs even if only one or two are specified. As such, the extraneous
       sniffs must be excluded. These exclusions only need to be done on one of
       the ClassComment sniff references however. It does not need to be repeated.
  -->
  <rule ref="PEAR.Commenting.ClassComment.Empty">
    <exclude name="PEAR.Commenting.ClassComment.EmptyCopyright"/>
    <exclude name="PEAR.Commenting.ClassComment.EmptyVersion"/>
    <exclude name="PEAR.Commenting.ClassComment.InvalidVersion"/>
    <exclude name="PEAR.Commenting.ClassComment.MissingTag"/>
    <exclude name="PEAR.Commenting.ClassComment.SpacingAfterShort"/>
    <exclude name="PEAR.Commenting.ClassComment.SpacingBeforeShort"/>
    <exclude name="PEAR.Commenting.ClassComment.SpacingBeforeTags"/>
    <exclude name="PEAR.Commenting.ClassComment.TagIndent"/>
    <severity>8</severity>
  </rule>
  <rule ref="PEAR.Commenting.ClassComment.WrongStyle">
    <severity>8</severity>
  </rule>
  <rule ref="PEAR.Commenting.ClassComment.Missing">
    <severity>8</severity>
  </rule>
  <rule ref="Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterComma">
    <severity>7</severity>
  </rule>
  <rule ref="Generic.Functions.FunctionCallArgumentSpacing.SpaceBeforeComma">
    <severity>7</severity>
  </rule>
  <rule ref="Squiz.Classes.ClassFileName">
      <severity>8</severity>
  </rule>

  <!--
    OLCS additions
  -->
  <rule ref="PEAR.Commenting.ClassComment">
      <exclude-pattern>test/*</exclude-pattern>
  </rule>
  <rule ref="PEAR.Commenting.ClassComment.Missing">
    <severity>2</severity>
  </rule>
  <rule ref="PEAR.Commenting.ClassComment.Empty">
    <severity>2</severity>
  </rule>
  <rule ref="PEAR.Commenting.ClassComment.WrongStyle">
    <severity>2</severity>
  </rule>

  <rule ref="PEAR.Commenting.FunctionComment">
      <exclude-pattern>test/</exclude-pattern>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.Empty">
      <severity>2</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.Missing">
      <severity>2</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.MissingParamComment">
      <severity>2</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.ParameterNamesNotAligned">
      <severity>2</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.MissingReturn">
      <severity>2</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.SpacingAfterParams">
      <severity>2</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.WrongStyle">
      <severity>2</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.SpacingBeforeTags">
      <severity>2</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.MissingParamName">
      <severity>2</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.ParamNameNoMatch">
      <severity>2</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.ParameterCommentsNotAligned">
      <severity>2</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.MissingParamTag">
      <severity>2</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.ExtraParamComment">
      <severity>2</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.SpacingBeforeParams">
      <severity>2</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.SpacingAfterLongName">
      <severity>2</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.SpacingAfterLongType">
      <severity>2</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.SpacingBeforeShort">
      <severity>2</severity>
  </rule>
  <rule ref="PEAR.Commenting.FunctionComment.SpacingBeforeParamType">
      <severity>2</severity>
  </rule>
  <rule ref="PEAR.Functions.FunctionCallSignature.Indent">
      <severity>2</severity>
  </rule>

</ruleset>

